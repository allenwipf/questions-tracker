#!/usr/bin/env ruby 
require 'pry'
user_input = ARGV

# if user_input[0] is nil, questions will print
def print_questions

    questions = File.open("/Users/Wipf/questions.txt", "r")

	questions.readlines.each_with_index do |eachLine, idx|

	print "#{idx +1}. #{eachLine}"

	end

end
 
# if the first argument == "add" then this code appends the second argument passed to the file

def add(new_question)


	questions = File.open("/Users/Wipf/questions.txt", "a")

	questions.puts new_question

	questions.close

	print "Question '#{new_question}' has been added"

end

# if user_input[0] == "rm" then this code will open the file and copy each line into a new array unless 
# it's index matches the number passed by second_arg or is an empty line. That array is then, line 
# by line printed to the same file after it's erased. 

def removeLine(lineNumber)
  

	lineNumber = lineNumber - 1
	newQuestions =  ""

	questions = File.open("/Users/Wipf/questions.txt", "r+")

		questions.readlines.each_with_index do |eachLine, idx|

			if idx != lineNumber && eachLine.delete("#{idx}\n") != "" #each line has an index and /n ; .delete("#{idx}\n")removes it
												   		 
			 	newQuestions += eachLine

			end
 	    end

    questions.close

 	questions = File.open("/Users/Wipf/questions.txt", "w")
 	questions.puts newQuestions

	questions.close

	print "Question #{lineNumber + 1} has been removed"

	puts 
	puts
	puts "Updated questions are:"
	print_questions

end




#If statements that determines which functions run based on user_input[0] value

if user_input[0] == "add" then #if add is passed then add questions passed

	new_question = user_input[1].to_s
	add(new_question)

elsif user_input[0] == "rm" then  #if rm is passed then removed line indicated

	lineNumber = user_input[1].to_i
	removeLine(lineNumber)

elsif user_input[0].nil? #if no arguement is passed then print each questions

	print_questions

end
